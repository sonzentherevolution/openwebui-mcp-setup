# MCPO Environment Configuration Example
# Copy this file to .env and update with your values

# ============================================================================
# BASIC CONFIGURATION
# ============================================================================

# API key for MCPO authentication
# Generate a secure key: openssl rand -base64 32
API_KEY=demo-secret-key-change-me

# Port for MCPO proxy server
MCPO_PORT=8000

# Host binding (use 0.0.0.0 for Docker, 127.0.0.1 for local only)
MCPO_HOST=0.0.0.0

# Log level (debug, info, warning, error)
LOG_LEVEL=info

# ============================================================================
# MCP SERVER CONFIGURATION
# ============================================================================

# Timezone for time server
TIMEZONE=America/New_York

# Memory server storage path (relative to container/working directory)
MEMORY_STORAGE_PATH=./data/memory

# Filesystem server allowed directories (separated by commas)
FILESYSTEM_ALLOWED_DIRS=./sandbox,./uploads

# Maximum file size for filesystem operations (in bytes)
MAX_FILE_SIZE=52428800

# Git configuration
GIT_CONFIG_GLOBAL=./config/gitconfig

# ============================================================================
# EXTERNAL SERVICES (for SSE/HTTP transport)
# ============================================================================

# External SSE service
EXTERNAL_SSE_URL=http://external-service:8001/sse
EXTERNAL_SSE_TOKEN=your-sse-service-token

# External HTTP service  
EXTERNAL_HTTP_URL=http://another-service:8002/mcp
EXTERNAL_HTTP_KEY=your-http-service-key

# ============================================================================
# OPEN WEB UI INTEGRATION
# ============================================================================

# Open Web UI secret key
WEBUI_SECRET_KEY=your-webui-secret-key

# Ollama base URL for Open Web UI
OLLAMA_BASE_URL=http://ollama:11434

# Enable direct connections to tool servers
ENABLE_DIRECT_CONNECTIONS=true

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# PostgreSQL settings
POSTGRES_DB=openwebui
POSTGRES_USER=postgres
POSTGRES_PASSWORD=change-this-password
POSTGRES_HOST=postgres
POSTGRES_PORT=5432

# Redis settings
REDIS_PASSWORD=change-this-redis-password
REDIS_HOST=redis
REDIS_PORT=6379

# ============================================================================
# SECURITY SETTINGS
# ============================================================================

# JWT secret for token generation
JWT_SECRET=your-jwt-secret-key

# CORS origins (comma separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# Rate limiting
RATE_LIMIT_REQUESTS=100
RATE_LIMIT_WINDOW=60

# SSL/TLS settings
SSL_CERT_PATH=./ssl/cert.pem
SSL_KEY_PATH=./ssl/key.pem

# ============================================================================
# MONITORING AND LOGGING
# ============================================================================

# Enable metrics collection
ENABLE_METRICS=false

# Metrics port
METRICS_PORT=9090

# Log file path (empty for stdout)
LOG_FILE=

# Enable request logging
LOG_REQUESTS=true

# ============================================================================
# DEVELOPMENT SETTINGS
# ============================================================================

# Environment mode
NODE_ENV=development

# Python environment
PYTHONPATH=./servers

# Enable debug mode
DEBUG=false

# Auto-reload on file changes
AUTO_RELOAD=true

# ============================================================================
# DOCKER SPECIFIC
# ============================================================================

# Docker image tags
MCPO_TAG=main
OPEN_WEBUI_TAG=main
OLLAMA_TAG=latest
POSTGRES_TAG=15-alpine
REDIS_TAG=7-alpine
NGINX_TAG=alpine

# Container resource limits
MCPO_MEMORY_LIMIT=512M
MCPO_CPU_LIMIT=0.5